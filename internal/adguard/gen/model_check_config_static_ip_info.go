/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package adguard

import (
	"encoding/json"
)

// CheckConfigStaticIpInfo struct for CheckConfigStaticIpInfo
type CheckConfigStaticIpInfo struct {
	Static *CheckConfigStaticIpInfoStatic `json:"static,omitempty"`
	// Current dynamic IP address. Set if static=no
	Ip *string `json:"ip,omitempty"`
	// Error text. Set if static=error
	Error *string `json:"error,omitempty"`
}

// NewCheckConfigStaticIpInfo instantiates a new CheckConfigStaticIpInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckConfigStaticIpInfo() *CheckConfigStaticIpInfo {
	this := CheckConfigStaticIpInfo{}
	var ip string = ""
	this.Ip = &ip
	var error_ string = ""
	this.Error = &error_
	return &this
}

// NewCheckConfigStaticIpInfoWithDefaults instantiates a new CheckConfigStaticIpInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckConfigStaticIpInfoWithDefaults() *CheckConfigStaticIpInfo {
	this := CheckConfigStaticIpInfo{}
	var ip string = ""
	this.Ip = &ip
	var error_ string = ""
	this.Error = &error_
	return &this
}

// GetStatic returns the Static field value if set, zero value otherwise.
func (o *CheckConfigStaticIpInfo) GetStatic() CheckConfigStaticIpInfoStatic {
	if o == nil || o.Static == nil {
		var ret CheckConfigStaticIpInfoStatic
		return ret
	}
	return *o.Static
}

// GetStaticOk returns a tuple with the Static field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckConfigStaticIpInfo) GetStaticOk() (*CheckConfigStaticIpInfoStatic, bool) {
	if o == nil || o.Static == nil {
		return nil, false
	}
	return o.Static, true
}

// HasStatic returns a boolean if a field has been set.
func (o *CheckConfigStaticIpInfo) HasStatic() bool {
	if o != nil && o.Static != nil {
		return true
	}

	return false
}

// SetStatic gets a reference to the given CheckConfigStaticIpInfoStatic and assigns it to the Static field.
func (o *CheckConfigStaticIpInfo) SetStatic(v CheckConfigStaticIpInfoStatic) {
	o.Static = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *CheckConfigStaticIpInfo) GetIp() string {
	if o == nil || o.Ip == nil {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckConfigStaticIpInfo) GetIpOk() (*string, bool) {
	if o == nil || o.Ip == nil {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *CheckConfigStaticIpInfo) HasIp() bool {
	if o != nil && o.Ip != nil {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *CheckConfigStaticIpInfo) SetIp(v string) {
	o.Ip = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *CheckConfigStaticIpInfo) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckConfigStaticIpInfo) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *CheckConfigStaticIpInfo) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *CheckConfigStaticIpInfo) SetError(v string) {
	o.Error = &v
}

func (o CheckConfigStaticIpInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Static != nil {
		toSerialize["static"] = o.Static
	}
	if o.Ip != nil {
		toSerialize["ip"] = o.Ip
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableCheckConfigStaticIpInfo struct {
	value *CheckConfigStaticIpInfo
	isSet bool
}

func (v NullableCheckConfigStaticIpInfo) Get() *CheckConfigStaticIpInfo {
	return v.value
}

func (v *NullableCheckConfigStaticIpInfo) Set(val *CheckConfigStaticIpInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckConfigStaticIpInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckConfigStaticIpInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckConfigStaticIpInfo(val *CheckConfigStaticIpInfo) *NullableCheckConfigStaticIpInfo {
	return &NullableCheckConfigStaticIpInfo{value: val, isSet: true}
}

func (v NullableCheckConfigStaticIpInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckConfigStaticIpInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


