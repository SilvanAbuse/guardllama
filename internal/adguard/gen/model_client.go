/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package adguard

import (
	"encoding/json"
)

// Client Client information.
type Client struct {
	// Name
	Name *string `json:"name,omitempty"`
	// IP, CIDR, MAC, or ClientID.
	Ids []string `json:"ids,omitempty"`
	UseGlobalSettings *bool `json:"use_global_settings,omitempty"`
	FilteringEnabled *bool `json:"filtering_enabled,omitempty"`
	ParentalEnabled *bool `json:"parental_enabled,omitempty"`
	SafebrowsingEnabled *bool `json:"safebrowsing_enabled,omitempty"`
	SafesearchEnabled *bool `json:"safesearch_enabled,omitempty"`
	UseGlobalBlockedServices *bool `json:"use_global_blocked_services,omitempty"`
	BlockedServices []string `json:"blocked_services,omitempty"`
	Upstreams []string `json:"upstreams,omitempty"`
	Tags []string `json:"tags,omitempty"`
}

// NewClient instantiates a new Client object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClient() *Client {
	this := Client{}
	return &this
}

// NewClientWithDefaults instantiates a new Client object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientWithDefaults() *Client {
	this := Client{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Client) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Client) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Client) SetName(v string) {
	o.Name = &v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *Client) GetIds() []string {
	if o == nil || o.Ids == nil {
		var ret []string
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetIdsOk() ([]string, bool) {
	if o == nil || o.Ids == nil {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *Client) HasIds() bool {
	if o != nil && o.Ids != nil {
		return true
	}

	return false
}

// SetIds gets a reference to the given []string and assigns it to the Ids field.
func (o *Client) SetIds(v []string) {
	o.Ids = v
}

// GetUseGlobalSettings returns the UseGlobalSettings field value if set, zero value otherwise.
func (o *Client) GetUseGlobalSettings() bool {
	if o == nil || o.UseGlobalSettings == nil {
		var ret bool
		return ret
	}
	return *o.UseGlobalSettings
}

// GetUseGlobalSettingsOk returns a tuple with the UseGlobalSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetUseGlobalSettingsOk() (*bool, bool) {
	if o == nil || o.UseGlobalSettings == nil {
		return nil, false
	}
	return o.UseGlobalSettings, true
}

// HasUseGlobalSettings returns a boolean if a field has been set.
func (o *Client) HasUseGlobalSettings() bool {
	if o != nil && o.UseGlobalSettings != nil {
		return true
	}

	return false
}

// SetUseGlobalSettings gets a reference to the given bool and assigns it to the UseGlobalSettings field.
func (o *Client) SetUseGlobalSettings(v bool) {
	o.UseGlobalSettings = &v
}

// GetFilteringEnabled returns the FilteringEnabled field value if set, zero value otherwise.
func (o *Client) GetFilteringEnabled() bool {
	if o == nil || o.FilteringEnabled == nil {
		var ret bool
		return ret
	}
	return *o.FilteringEnabled
}

// GetFilteringEnabledOk returns a tuple with the FilteringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetFilteringEnabledOk() (*bool, bool) {
	if o == nil || o.FilteringEnabled == nil {
		return nil, false
	}
	return o.FilteringEnabled, true
}

// HasFilteringEnabled returns a boolean if a field has been set.
func (o *Client) HasFilteringEnabled() bool {
	if o != nil && o.FilteringEnabled != nil {
		return true
	}

	return false
}

// SetFilteringEnabled gets a reference to the given bool and assigns it to the FilteringEnabled field.
func (o *Client) SetFilteringEnabled(v bool) {
	o.FilteringEnabled = &v
}

// GetParentalEnabled returns the ParentalEnabled field value if set, zero value otherwise.
func (o *Client) GetParentalEnabled() bool {
	if o == nil || o.ParentalEnabled == nil {
		var ret bool
		return ret
	}
	return *o.ParentalEnabled
}

// GetParentalEnabledOk returns a tuple with the ParentalEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetParentalEnabledOk() (*bool, bool) {
	if o == nil || o.ParentalEnabled == nil {
		return nil, false
	}
	return o.ParentalEnabled, true
}

// HasParentalEnabled returns a boolean if a field has been set.
func (o *Client) HasParentalEnabled() bool {
	if o != nil && o.ParentalEnabled != nil {
		return true
	}

	return false
}

// SetParentalEnabled gets a reference to the given bool and assigns it to the ParentalEnabled field.
func (o *Client) SetParentalEnabled(v bool) {
	o.ParentalEnabled = &v
}

// GetSafebrowsingEnabled returns the SafebrowsingEnabled field value if set, zero value otherwise.
func (o *Client) GetSafebrowsingEnabled() bool {
	if o == nil || o.SafebrowsingEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SafebrowsingEnabled
}

// GetSafebrowsingEnabledOk returns a tuple with the SafebrowsingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetSafebrowsingEnabledOk() (*bool, bool) {
	if o == nil || o.SafebrowsingEnabled == nil {
		return nil, false
	}
	return o.SafebrowsingEnabled, true
}

// HasSafebrowsingEnabled returns a boolean if a field has been set.
func (o *Client) HasSafebrowsingEnabled() bool {
	if o != nil && o.SafebrowsingEnabled != nil {
		return true
	}

	return false
}

// SetSafebrowsingEnabled gets a reference to the given bool and assigns it to the SafebrowsingEnabled field.
func (o *Client) SetSafebrowsingEnabled(v bool) {
	o.SafebrowsingEnabled = &v
}

// GetSafesearchEnabled returns the SafesearchEnabled field value if set, zero value otherwise.
func (o *Client) GetSafesearchEnabled() bool {
	if o == nil || o.SafesearchEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SafesearchEnabled
}

// GetSafesearchEnabledOk returns a tuple with the SafesearchEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetSafesearchEnabledOk() (*bool, bool) {
	if o == nil || o.SafesearchEnabled == nil {
		return nil, false
	}
	return o.SafesearchEnabled, true
}

// HasSafesearchEnabled returns a boolean if a field has been set.
func (o *Client) HasSafesearchEnabled() bool {
	if o != nil && o.SafesearchEnabled != nil {
		return true
	}

	return false
}

// SetSafesearchEnabled gets a reference to the given bool and assigns it to the SafesearchEnabled field.
func (o *Client) SetSafesearchEnabled(v bool) {
	o.SafesearchEnabled = &v
}

// GetUseGlobalBlockedServices returns the UseGlobalBlockedServices field value if set, zero value otherwise.
func (o *Client) GetUseGlobalBlockedServices() bool {
	if o == nil || o.UseGlobalBlockedServices == nil {
		var ret bool
		return ret
	}
	return *o.UseGlobalBlockedServices
}

// GetUseGlobalBlockedServicesOk returns a tuple with the UseGlobalBlockedServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetUseGlobalBlockedServicesOk() (*bool, bool) {
	if o == nil || o.UseGlobalBlockedServices == nil {
		return nil, false
	}
	return o.UseGlobalBlockedServices, true
}

// HasUseGlobalBlockedServices returns a boolean if a field has been set.
func (o *Client) HasUseGlobalBlockedServices() bool {
	if o != nil && o.UseGlobalBlockedServices != nil {
		return true
	}

	return false
}

// SetUseGlobalBlockedServices gets a reference to the given bool and assigns it to the UseGlobalBlockedServices field.
func (o *Client) SetUseGlobalBlockedServices(v bool) {
	o.UseGlobalBlockedServices = &v
}

// GetBlockedServices returns the BlockedServices field value if set, zero value otherwise.
func (o *Client) GetBlockedServices() []string {
	if o == nil || o.BlockedServices == nil {
		var ret []string
		return ret
	}
	return o.BlockedServices
}

// GetBlockedServicesOk returns a tuple with the BlockedServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetBlockedServicesOk() ([]string, bool) {
	if o == nil || o.BlockedServices == nil {
		return nil, false
	}
	return o.BlockedServices, true
}

// HasBlockedServices returns a boolean if a field has been set.
func (o *Client) HasBlockedServices() bool {
	if o != nil && o.BlockedServices != nil {
		return true
	}

	return false
}

// SetBlockedServices gets a reference to the given []string and assigns it to the BlockedServices field.
func (o *Client) SetBlockedServices(v []string) {
	o.BlockedServices = v
}

// GetUpstreams returns the Upstreams field value if set, zero value otherwise.
func (o *Client) GetUpstreams() []string {
	if o == nil || o.Upstreams == nil {
		var ret []string
		return ret
	}
	return o.Upstreams
}

// GetUpstreamsOk returns a tuple with the Upstreams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetUpstreamsOk() ([]string, bool) {
	if o == nil || o.Upstreams == nil {
		return nil, false
	}
	return o.Upstreams, true
}

// HasUpstreams returns a boolean if a field has been set.
func (o *Client) HasUpstreams() bool {
	if o != nil && o.Upstreams != nil {
		return true
	}

	return false
}

// SetUpstreams gets a reference to the given []string and assigns it to the Upstreams field.
func (o *Client) SetUpstreams(v []string) {
	o.Upstreams = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Client) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Client) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Client) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Client) SetTags(v []string) {
	o.Tags = v
}

func (o Client) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Ids != nil {
		toSerialize["ids"] = o.Ids
	}
	if o.UseGlobalSettings != nil {
		toSerialize["use_global_settings"] = o.UseGlobalSettings
	}
	if o.FilteringEnabled != nil {
		toSerialize["filtering_enabled"] = o.FilteringEnabled
	}
	if o.ParentalEnabled != nil {
		toSerialize["parental_enabled"] = o.ParentalEnabled
	}
	if o.SafebrowsingEnabled != nil {
		toSerialize["safebrowsing_enabled"] = o.SafebrowsingEnabled
	}
	if o.SafesearchEnabled != nil {
		toSerialize["safesearch_enabled"] = o.SafesearchEnabled
	}
	if o.UseGlobalBlockedServices != nil {
		toSerialize["use_global_blocked_services"] = o.UseGlobalBlockedServices
	}
	if o.BlockedServices != nil {
		toSerialize["blocked_services"] = o.BlockedServices
	}
	if o.Upstreams != nil {
		toSerialize["upstreams"] = o.Upstreams
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableClient struct {
	value *Client
	isSet bool
}

func (v NullableClient) Get() *Client {
	return v.value
}

func (v *NullableClient) Set(val *Client) {
	v.value = val
	v.isSet = true
}

func (v NullableClient) IsSet() bool {
	return v.isSet
}

func (v *NullableClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClient(val *Client) *NullableClient {
	return &NullableClient{value: val, isSet: true}
}

func (v NullableClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


