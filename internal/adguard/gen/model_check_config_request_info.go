/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package adguard

import (
	"encoding/json"
)

// CheckConfigRequestInfo struct for CheckConfigRequestInfo
type CheckConfigRequestInfo struct {
	Ip *string `json:"ip,omitempty"`
	Port *int32 `json:"port,omitempty"`
	Autofix *bool `json:"autofix,omitempty"`
}

// NewCheckConfigRequestInfo instantiates a new CheckConfigRequestInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckConfigRequestInfo() *CheckConfigRequestInfo {
	this := CheckConfigRequestInfo{}
	return &this
}

// NewCheckConfigRequestInfoWithDefaults instantiates a new CheckConfigRequestInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckConfigRequestInfoWithDefaults() *CheckConfigRequestInfo {
	this := CheckConfigRequestInfo{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *CheckConfigRequestInfo) GetIp() string {
	if o == nil || o.Ip == nil {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckConfigRequestInfo) GetIpOk() (*string, bool) {
	if o == nil || o.Ip == nil {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *CheckConfigRequestInfo) HasIp() bool {
	if o != nil && o.Ip != nil {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *CheckConfigRequestInfo) SetIp(v string) {
	o.Ip = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *CheckConfigRequestInfo) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckConfigRequestInfo) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *CheckConfigRequestInfo) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *CheckConfigRequestInfo) SetPort(v int32) {
	o.Port = &v
}

// GetAutofix returns the Autofix field value if set, zero value otherwise.
func (o *CheckConfigRequestInfo) GetAutofix() bool {
	if o == nil || o.Autofix == nil {
		var ret bool
		return ret
	}
	return *o.Autofix
}

// GetAutofixOk returns a tuple with the Autofix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckConfigRequestInfo) GetAutofixOk() (*bool, bool) {
	if o == nil || o.Autofix == nil {
		return nil, false
	}
	return o.Autofix, true
}

// HasAutofix returns a boolean if a field has been set.
func (o *CheckConfigRequestInfo) HasAutofix() bool {
	if o != nil && o.Autofix != nil {
		return true
	}

	return false
}

// SetAutofix gets a reference to the given bool and assigns it to the Autofix field.
func (o *CheckConfigRequestInfo) SetAutofix(v bool) {
	o.Autofix = &v
}

func (o CheckConfigRequestInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ip != nil {
		toSerialize["ip"] = o.Ip
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.Autofix != nil {
		toSerialize["autofix"] = o.Autofix
	}
	return json.Marshal(toSerialize)
}

type NullableCheckConfigRequestInfo struct {
	value *CheckConfigRequestInfo
	isSet bool
}

func (v NullableCheckConfigRequestInfo) Get() *CheckConfigRequestInfo {
	return v.value
}

func (v *NullableCheckConfigRequestInfo) Set(val *CheckConfigRequestInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckConfigRequestInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckConfigRequestInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckConfigRequestInfo(val *CheckConfigRequestInfo) *NullableCheckConfigRequestInfo {
	return &NullableCheckConfigRequestInfo{value: val, isSet: true}
}

func (v NullableCheckConfigRequestInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckConfigRequestInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


