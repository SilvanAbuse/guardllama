/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package adguard

import (
	"encoding/json"
)

// AddUrlRequest /add_url request data
type AddUrlRequest struct {
	Name *string `json:"name,omitempty"`
	// URL or an absolute path to the file containing filtering rules. 
	Url *string `json:"url,omitempty"`
	Whitelist *bool `json:"whitelist,omitempty"`
}

// NewAddUrlRequest instantiates a new AddUrlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddUrlRequest() *AddUrlRequest {
	this := AddUrlRequest{}
	return &this
}

// NewAddUrlRequestWithDefaults instantiates a new AddUrlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddUrlRequestWithDefaults() *AddUrlRequest {
	this := AddUrlRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddUrlRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUrlRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AddUrlRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddUrlRequest) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AddUrlRequest) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUrlRequest) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AddUrlRequest) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AddUrlRequest) SetUrl(v string) {
	o.Url = &v
}

// GetWhitelist returns the Whitelist field value if set, zero value otherwise.
func (o *AddUrlRequest) GetWhitelist() bool {
	if o == nil || o.Whitelist == nil {
		var ret bool
		return ret
	}
	return *o.Whitelist
}

// GetWhitelistOk returns a tuple with the Whitelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUrlRequest) GetWhitelistOk() (*bool, bool) {
	if o == nil || o.Whitelist == nil {
		return nil, false
	}
	return o.Whitelist, true
}

// HasWhitelist returns a boolean if a field has been set.
func (o *AddUrlRequest) HasWhitelist() bool {
	if o != nil && o.Whitelist != nil {
		return true
	}

	return false
}

// SetWhitelist gets a reference to the given bool and assigns it to the Whitelist field.
func (o *AddUrlRequest) SetWhitelist(v bool) {
	o.Whitelist = &v
}

func (o AddUrlRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Whitelist != nil {
		toSerialize["whitelist"] = o.Whitelist
	}
	return json.Marshal(toSerialize)
}

type NullableAddUrlRequest struct {
	value *AddUrlRequest
	isSet bool
}

func (v NullableAddUrlRequest) Get() *AddUrlRequest {
	return v.value
}

func (v *NullableAddUrlRequest) Set(val *AddUrlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddUrlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddUrlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddUrlRequest(val *AddUrlRequest) *NullableAddUrlRequest {
	return &NullableAddUrlRequest{value: val, isSet: true}
}

func (v NullableAddUrlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddUrlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


