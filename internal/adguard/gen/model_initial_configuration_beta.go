/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package adguard

import (
	"encoding/json"
)

// InitialConfigurationBeta AdGuard Home initial configuration for the first-install wizard. 
type InitialConfigurationBeta struct {
	Dns AddressInfoBeta `json:"dns"`
	Web AddressInfoBeta `json:"web"`
	// Basic auth username
	Username string `json:"username"`
	// Basic auth password
	Password string `json:"password"`
}

// NewInitialConfigurationBeta instantiates a new InitialConfigurationBeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitialConfigurationBeta(dns AddressInfoBeta, web AddressInfoBeta, username string, password string) *InitialConfigurationBeta {
	this := InitialConfigurationBeta{}
	this.Dns = dns
	this.Web = web
	this.Username = username
	this.Password = password
	return &this
}

// NewInitialConfigurationBetaWithDefaults instantiates a new InitialConfigurationBeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitialConfigurationBetaWithDefaults() *InitialConfigurationBeta {
	this := InitialConfigurationBeta{}
	return &this
}

// GetDns returns the Dns field value
func (o *InitialConfigurationBeta) GetDns() AddressInfoBeta {
	if o == nil {
		var ret AddressInfoBeta
		return ret
	}

	return o.Dns
}

// GetDnsOk returns a tuple with the Dns field value
// and a boolean to check if the value has been set.
func (o *InitialConfigurationBeta) GetDnsOk() (*AddressInfoBeta, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dns, true
}

// SetDns sets field value
func (o *InitialConfigurationBeta) SetDns(v AddressInfoBeta) {
	o.Dns = v
}

// GetWeb returns the Web field value
func (o *InitialConfigurationBeta) GetWeb() AddressInfoBeta {
	if o == nil {
		var ret AddressInfoBeta
		return ret
	}

	return o.Web
}

// GetWebOk returns a tuple with the Web field value
// and a boolean to check if the value has been set.
func (o *InitialConfigurationBeta) GetWebOk() (*AddressInfoBeta, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Web, true
}

// SetWeb sets field value
func (o *InitialConfigurationBeta) SetWeb(v AddressInfoBeta) {
	o.Web = v
}

// GetUsername returns the Username field value
func (o *InitialConfigurationBeta) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *InitialConfigurationBeta) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *InitialConfigurationBeta) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *InitialConfigurationBeta) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *InitialConfigurationBeta) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *InitialConfigurationBeta) SetPassword(v string) {
	o.Password = v
}

func (o InitialConfigurationBeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dns"] = o.Dns
	}
	if true {
		toSerialize["web"] = o.Web
	}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableInitialConfigurationBeta struct {
	value *InitialConfigurationBeta
	isSet bool
}

func (v NullableInitialConfigurationBeta) Get() *InitialConfigurationBeta {
	return v.value
}

func (v *NullableInitialConfigurationBeta) Set(val *InitialConfigurationBeta) {
	v.value = val
	v.isSet = true
}

func (v NullableInitialConfigurationBeta) IsSet() bool {
	return v.isSet
}

func (v *NullableInitialConfigurationBeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitialConfigurationBeta(val *InitialConfigurationBeta) *NullableInitialConfigurationBeta {
	return &NullableInitialConfigurationBeta{value: val, isSet: true}
}

func (v NullableInitialConfigurationBeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitialConfigurationBeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


