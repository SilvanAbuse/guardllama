/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package adguard

import (
	"encoding/json"
)

// Stats Server statistics data
type Stats struct {
	// Time units
	TimeUnits *string `json:"time_units,omitempty"`
	// Total number of DNS queries
	NumDnsQueries *int32 `json:"num_dns_queries,omitempty"`
	// Number of requests blocked by filtering rules
	NumBlockedFiltering *int32 `json:"num_blocked_filtering,omitempty"`
	// Number of requests blocked by safebrowsing module
	NumReplacedSafebrowsing *int32 `json:"num_replaced_safebrowsing,omitempty"`
	// Number of requests blocked by safesearch module
	NumReplacedSafesearch *int32 `json:"num_replaced_safesearch,omitempty"`
	// Number of blocked adult websites
	NumReplacedParental *int32 `json:"num_replaced_parental,omitempty"`
	// Average time in milliseconds on processing a DNS
	AvgProcessingTime *float32 `json:"avg_processing_time,omitempty"`
	TopQueriedDomains []TopArrayEntry `json:"top_queried_domains,omitempty"`
	TopClients []TopArrayEntry `json:"top_clients,omitempty"`
	TopBlockedDomains []TopArrayEntry `json:"top_blocked_domains,omitempty"`
	DnsQueries []int32 `json:"dns_queries,omitempty"`
	BlockedFiltering []int32 `json:"blocked_filtering,omitempty"`
	ReplacedSafebrowsing []int32 `json:"replaced_safebrowsing,omitempty"`
	ReplacedParental []int32 `json:"replaced_parental,omitempty"`
}

// NewStats instantiates a new Stats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStats() *Stats {
	this := Stats{}
	return &this
}

// NewStatsWithDefaults instantiates a new Stats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatsWithDefaults() *Stats {
	this := Stats{}
	return &this
}

// GetTimeUnits returns the TimeUnits field value if set, zero value otherwise.
func (o *Stats) GetTimeUnits() string {
	if o == nil || o.TimeUnits == nil {
		var ret string
		return ret
	}
	return *o.TimeUnits
}

// GetTimeUnitsOk returns a tuple with the TimeUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetTimeUnitsOk() (*string, bool) {
	if o == nil || o.TimeUnits == nil {
		return nil, false
	}
	return o.TimeUnits, true
}

// HasTimeUnits returns a boolean if a field has been set.
func (o *Stats) HasTimeUnits() bool {
	if o != nil && o.TimeUnits != nil {
		return true
	}

	return false
}

// SetTimeUnits gets a reference to the given string and assigns it to the TimeUnits field.
func (o *Stats) SetTimeUnits(v string) {
	o.TimeUnits = &v
}

// GetNumDnsQueries returns the NumDnsQueries field value if set, zero value otherwise.
func (o *Stats) GetNumDnsQueries() int32 {
	if o == nil || o.NumDnsQueries == nil {
		var ret int32
		return ret
	}
	return *o.NumDnsQueries
}

// GetNumDnsQueriesOk returns a tuple with the NumDnsQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetNumDnsQueriesOk() (*int32, bool) {
	if o == nil || o.NumDnsQueries == nil {
		return nil, false
	}
	return o.NumDnsQueries, true
}

// HasNumDnsQueries returns a boolean if a field has been set.
func (o *Stats) HasNumDnsQueries() bool {
	if o != nil && o.NumDnsQueries != nil {
		return true
	}

	return false
}

// SetNumDnsQueries gets a reference to the given int32 and assigns it to the NumDnsQueries field.
func (o *Stats) SetNumDnsQueries(v int32) {
	o.NumDnsQueries = &v
}

// GetNumBlockedFiltering returns the NumBlockedFiltering field value if set, zero value otherwise.
func (o *Stats) GetNumBlockedFiltering() int32 {
	if o == nil || o.NumBlockedFiltering == nil {
		var ret int32
		return ret
	}
	return *o.NumBlockedFiltering
}

// GetNumBlockedFilteringOk returns a tuple with the NumBlockedFiltering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetNumBlockedFilteringOk() (*int32, bool) {
	if o == nil || o.NumBlockedFiltering == nil {
		return nil, false
	}
	return o.NumBlockedFiltering, true
}

// HasNumBlockedFiltering returns a boolean if a field has been set.
func (o *Stats) HasNumBlockedFiltering() bool {
	if o != nil && o.NumBlockedFiltering != nil {
		return true
	}

	return false
}

// SetNumBlockedFiltering gets a reference to the given int32 and assigns it to the NumBlockedFiltering field.
func (o *Stats) SetNumBlockedFiltering(v int32) {
	o.NumBlockedFiltering = &v
}

// GetNumReplacedSafebrowsing returns the NumReplacedSafebrowsing field value if set, zero value otherwise.
func (o *Stats) GetNumReplacedSafebrowsing() int32 {
	if o == nil || o.NumReplacedSafebrowsing == nil {
		var ret int32
		return ret
	}
	return *o.NumReplacedSafebrowsing
}

// GetNumReplacedSafebrowsingOk returns a tuple with the NumReplacedSafebrowsing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetNumReplacedSafebrowsingOk() (*int32, bool) {
	if o == nil || o.NumReplacedSafebrowsing == nil {
		return nil, false
	}
	return o.NumReplacedSafebrowsing, true
}

// HasNumReplacedSafebrowsing returns a boolean if a field has been set.
func (o *Stats) HasNumReplacedSafebrowsing() bool {
	if o != nil && o.NumReplacedSafebrowsing != nil {
		return true
	}

	return false
}

// SetNumReplacedSafebrowsing gets a reference to the given int32 and assigns it to the NumReplacedSafebrowsing field.
func (o *Stats) SetNumReplacedSafebrowsing(v int32) {
	o.NumReplacedSafebrowsing = &v
}

// GetNumReplacedSafesearch returns the NumReplacedSafesearch field value if set, zero value otherwise.
func (o *Stats) GetNumReplacedSafesearch() int32 {
	if o == nil || o.NumReplacedSafesearch == nil {
		var ret int32
		return ret
	}
	return *o.NumReplacedSafesearch
}

// GetNumReplacedSafesearchOk returns a tuple with the NumReplacedSafesearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetNumReplacedSafesearchOk() (*int32, bool) {
	if o == nil || o.NumReplacedSafesearch == nil {
		return nil, false
	}
	return o.NumReplacedSafesearch, true
}

// HasNumReplacedSafesearch returns a boolean if a field has been set.
func (o *Stats) HasNumReplacedSafesearch() bool {
	if o != nil && o.NumReplacedSafesearch != nil {
		return true
	}

	return false
}

// SetNumReplacedSafesearch gets a reference to the given int32 and assigns it to the NumReplacedSafesearch field.
func (o *Stats) SetNumReplacedSafesearch(v int32) {
	o.NumReplacedSafesearch = &v
}

// GetNumReplacedParental returns the NumReplacedParental field value if set, zero value otherwise.
func (o *Stats) GetNumReplacedParental() int32 {
	if o == nil || o.NumReplacedParental == nil {
		var ret int32
		return ret
	}
	return *o.NumReplacedParental
}

// GetNumReplacedParentalOk returns a tuple with the NumReplacedParental field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetNumReplacedParentalOk() (*int32, bool) {
	if o == nil || o.NumReplacedParental == nil {
		return nil, false
	}
	return o.NumReplacedParental, true
}

// HasNumReplacedParental returns a boolean if a field has been set.
func (o *Stats) HasNumReplacedParental() bool {
	if o != nil && o.NumReplacedParental != nil {
		return true
	}

	return false
}

// SetNumReplacedParental gets a reference to the given int32 and assigns it to the NumReplacedParental field.
func (o *Stats) SetNumReplacedParental(v int32) {
	o.NumReplacedParental = &v
}

// GetAvgProcessingTime returns the AvgProcessingTime field value if set, zero value otherwise.
func (o *Stats) GetAvgProcessingTime() float32 {
	if o == nil || o.AvgProcessingTime == nil {
		var ret float32
		return ret
	}
	return *o.AvgProcessingTime
}

// GetAvgProcessingTimeOk returns a tuple with the AvgProcessingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetAvgProcessingTimeOk() (*float32, bool) {
	if o == nil || o.AvgProcessingTime == nil {
		return nil, false
	}
	return o.AvgProcessingTime, true
}

// HasAvgProcessingTime returns a boolean if a field has been set.
func (o *Stats) HasAvgProcessingTime() bool {
	if o != nil && o.AvgProcessingTime != nil {
		return true
	}

	return false
}

// SetAvgProcessingTime gets a reference to the given float32 and assigns it to the AvgProcessingTime field.
func (o *Stats) SetAvgProcessingTime(v float32) {
	o.AvgProcessingTime = &v
}

// GetTopQueriedDomains returns the TopQueriedDomains field value if set, zero value otherwise.
func (o *Stats) GetTopQueriedDomains() []TopArrayEntry {
	if o == nil || o.TopQueriedDomains == nil {
		var ret []TopArrayEntry
		return ret
	}
	return o.TopQueriedDomains
}

// GetTopQueriedDomainsOk returns a tuple with the TopQueriedDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetTopQueriedDomainsOk() ([]TopArrayEntry, bool) {
	if o == nil || o.TopQueriedDomains == nil {
		return nil, false
	}
	return o.TopQueriedDomains, true
}

// HasTopQueriedDomains returns a boolean if a field has been set.
func (o *Stats) HasTopQueriedDomains() bool {
	if o != nil && o.TopQueriedDomains != nil {
		return true
	}

	return false
}

// SetTopQueriedDomains gets a reference to the given []TopArrayEntry and assigns it to the TopQueriedDomains field.
func (o *Stats) SetTopQueriedDomains(v []TopArrayEntry) {
	o.TopQueriedDomains = v
}

// GetTopClients returns the TopClients field value if set, zero value otherwise.
func (o *Stats) GetTopClients() []TopArrayEntry {
	if o == nil || o.TopClients == nil {
		var ret []TopArrayEntry
		return ret
	}
	return o.TopClients
}

// GetTopClientsOk returns a tuple with the TopClients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetTopClientsOk() ([]TopArrayEntry, bool) {
	if o == nil || o.TopClients == nil {
		return nil, false
	}
	return o.TopClients, true
}

// HasTopClients returns a boolean if a field has been set.
func (o *Stats) HasTopClients() bool {
	if o != nil && o.TopClients != nil {
		return true
	}

	return false
}

// SetTopClients gets a reference to the given []TopArrayEntry and assigns it to the TopClients field.
func (o *Stats) SetTopClients(v []TopArrayEntry) {
	o.TopClients = v
}

// GetTopBlockedDomains returns the TopBlockedDomains field value if set, zero value otherwise.
func (o *Stats) GetTopBlockedDomains() []TopArrayEntry {
	if o == nil || o.TopBlockedDomains == nil {
		var ret []TopArrayEntry
		return ret
	}
	return o.TopBlockedDomains
}

// GetTopBlockedDomainsOk returns a tuple with the TopBlockedDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetTopBlockedDomainsOk() ([]TopArrayEntry, bool) {
	if o == nil || o.TopBlockedDomains == nil {
		return nil, false
	}
	return o.TopBlockedDomains, true
}

// HasTopBlockedDomains returns a boolean if a field has been set.
func (o *Stats) HasTopBlockedDomains() bool {
	if o != nil && o.TopBlockedDomains != nil {
		return true
	}

	return false
}

// SetTopBlockedDomains gets a reference to the given []TopArrayEntry and assigns it to the TopBlockedDomains field.
func (o *Stats) SetTopBlockedDomains(v []TopArrayEntry) {
	o.TopBlockedDomains = v
}

// GetDnsQueries returns the DnsQueries field value if set, zero value otherwise.
func (o *Stats) GetDnsQueries() []int32 {
	if o == nil || o.DnsQueries == nil {
		var ret []int32
		return ret
	}
	return o.DnsQueries
}

// GetDnsQueriesOk returns a tuple with the DnsQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetDnsQueriesOk() ([]int32, bool) {
	if o == nil || o.DnsQueries == nil {
		return nil, false
	}
	return o.DnsQueries, true
}

// HasDnsQueries returns a boolean if a field has been set.
func (o *Stats) HasDnsQueries() bool {
	if o != nil && o.DnsQueries != nil {
		return true
	}

	return false
}

// SetDnsQueries gets a reference to the given []int32 and assigns it to the DnsQueries field.
func (o *Stats) SetDnsQueries(v []int32) {
	o.DnsQueries = v
}

// GetBlockedFiltering returns the BlockedFiltering field value if set, zero value otherwise.
func (o *Stats) GetBlockedFiltering() []int32 {
	if o == nil || o.BlockedFiltering == nil {
		var ret []int32
		return ret
	}
	return o.BlockedFiltering
}

// GetBlockedFilteringOk returns a tuple with the BlockedFiltering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetBlockedFilteringOk() ([]int32, bool) {
	if o == nil || o.BlockedFiltering == nil {
		return nil, false
	}
	return o.BlockedFiltering, true
}

// HasBlockedFiltering returns a boolean if a field has been set.
func (o *Stats) HasBlockedFiltering() bool {
	if o != nil && o.BlockedFiltering != nil {
		return true
	}

	return false
}

// SetBlockedFiltering gets a reference to the given []int32 and assigns it to the BlockedFiltering field.
func (o *Stats) SetBlockedFiltering(v []int32) {
	o.BlockedFiltering = v
}

// GetReplacedSafebrowsing returns the ReplacedSafebrowsing field value if set, zero value otherwise.
func (o *Stats) GetReplacedSafebrowsing() []int32 {
	if o == nil || o.ReplacedSafebrowsing == nil {
		var ret []int32
		return ret
	}
	return o.ReplacedSafebrowsing
}

// GetReplacedSafebrowsingOk returns a tuple with the ReplacedSafebrowsing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetReplacedSafebrowsingOk() ([]int32, bool) {
	if o == nil || o.ReplacedSafebrowsing == nil {
		return nil, false
	}
	return o.ReplacedSafebrowsing, true
}

// HasReplacedSafebrowsing returns a boolean if a field has been set.
func (o *Stats) HasReplacedSafebrowsing() bool {
	if o != nil && o.ReplacedSafebrowsing != nil {
		return true
	}

	return false
}

// SetReplacedSafebrowsing gets a reference to the given []int32 and assigns it to the ReplacedSafebrowsing field.
func (o *Stats) SetReplacedSafebrowsing(v []int32) {
	o.ReplacedSafebrowsing = v
}

// GetReplacedParental returns the ReplacedParental field value if set, zero value otherwise.
func (o *Stats) GetReplacedParental() []int32 {
	if o == nil || o.ReplacedParental == nil {
		var ret []int32
		return ret
	}
	return o.ReplacedParental
}

// GetReplacedParentalOk returns a tuple with the ReplacedParental field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stats) GetReplacedParentalOk() ([]int32, bool) {
	if o == nil || o.ReplacedParental == nil {
		return nil, false
	}
	return o.ReplacedParental, true
}

// HasReplacedParental returns a boolean if a field has been set.
func (o *Stats) HasReplacedParental() bool {
	if o != nil && o.ReplacedParental != nil {
		return true
	}

	return false
}

// SetReplacedParental gets a reference to the given []int32 and assigns it to the ReplacedParental field.
func (o *Stats) SetReplacedParental(v []int32) {
	o.ReplacedParental = v
}

func (o Stats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TimeUnits != nil {
		toSerialize["time_units"] = o.TimeUnits
	}
	if o.NumDnsQueries != nil {
		toSerialize["num_dns_queries"] = o.NumDnsQueries
	}
	if o.NumBlockedFiltering != nil {
		toSerialize["num_blocked_filtering"] = o.NumBlockedFiltering
	}
	if o.NumReplacedSafebrowsing != nil {
		toSerialize["num_replaced_safebrowsing"] = o.NumReplacedSafebrowsing
	}
	if o.NumReplacedSafesearch != nil {
		toSerialize["num_replaced_safesearch"] = o.NumReplacedSafesearch
	}
	if o.NumReplacedParental != nil {
		toSerialize["num_replaced_parental"] = o.NumReplacedParental
	}
	if o.AvgProcessingTime != nil {
		toSerialize["avg_processing_time"] = o.AvgProcessingTime
	}
	if o.TopQueriedDomains != nil {
		toSerialize["top_queried_domains"] = o.TopQueriedDomains
	}
	if o.TopClients != nil {
		toSerialize["top_clients"] = o.TopClients
	}
	if o.TopBlockedDomains != nil {
		toSerialize["top_blocked_domains"] = o.TopBlockedDomains
	}
	if o.DnsQueries != nil {
		toSerialize["dns_queries"] = o.DnsQueries
	}
	if o.BlockedFiltering != nil {
		toSerialize["blocked_filtering"] = o.BlockedFiltering
	}
	if o.ReplacedSafebrowsing != nil {
		toSerialize["replaced_safebrowsing"] = o.ReplacedSafebrowsing
	}
	if o.ReplacedParental != nil {
		toSerialize["replaced_parental"] = o.ReplacedParental
	}
	return json.Marshal(toSerialize)
}

type NullableStats struct {
	value *Stats
	isSet bool
}

func (v NullableStats) Get() *Stats {
	return v.value
}

func (v *NullableStats) Set(val *Stats) {
	v.value = val
	v.isSet = true
}

func (v NullableStats) IsSet() bool {
	return v.isSet
}

func (v *NullableStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStats(val *Stats) *NullableStats {
	return &NullableStats{value: val, isSet: true}
}

func (v NullableStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


