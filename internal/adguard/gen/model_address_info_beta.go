/*
AdGuard Home

AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 

API version: 0.107
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package adguard

import (
	"encoding/json"
)

// AddressInfoBeta Port information
type AddressInfoBeta struct {
	Ip []string `json:"ip"`
	Port int32 `json:"port"`
}

// NewAddressInfoBeta instantiates a new AddressInfoBeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressInfoBeta(ip []string, port int32) *AddressInfoBeta {
	this := AddressInfoBeta{}
	this.Ip = ip
	this.Port = port
	return &this
}

// NewAddressInfoBetaWithDefaults instantiates a new AddressInfoBeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressInfoBetaWithDefaults() *AddressInfoBeta {
	this := AddressInfoBeta{}
	return &this
}

// GetIp returns the Ip field value
func (o *AddressInfoBeta) GetIp() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value
// and a boolean to check if the value has been set.
func (o *AddressInfoBeta) GetIpOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ip, true
}

// SetIp sets field value
func (o *AddressInfoBeta) SetIp(v []string) {
	o.Ip = v
}

// GetPort returns the Port field value
func (o *AddressInfoBeta) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *AddressInfoBeta) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *AddressInfoBeta) SetPort(v int32) {
	o.Port = v
}

func (o AddressInfoBeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ip"] = o.Ip
	}
	if true {
		toSerialize["port"] = o.Port
	}
	return json.Marshal(toSerialize)
}

type NullableAddressInfoBeta struct {
	value *AddressInfoBeta
	isSet bool
}

func (v NullableAddressInfoBeta) Get() *AddressInfoBeta {
	return v.value
}

func (v *NullableAddressInfoBeta) Set(val *AddressInfoBeta) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressInfoBeta) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressInfoBeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressInfoBeta(val *AddressInfoBeta) *NullableAddressInfoBeta {
	return &NullableAddressInfoBeta{value: val, isSet: true}
}

func (v NullableAddressInfoBeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressInfoBeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


