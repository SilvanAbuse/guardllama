name: Release
on:
  push:
    tags:
      - "v*"
jobs:
  goreleaser:
    name: GoReleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Generate tag name
        run: |
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: v1.15.2
          args: release --clean
        env:
          # Use the machine token to publish
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{env.tag_name}}
          TELE_SERVER_USERNAME: ${{ secrets.TELE_SERVER_USERNAME }}
          TELE_SERVER_PASSWORD: ${{ secrets.TELE_SERVER_PASSWORD }}
      - name: Upload install script
        env:
          GITHUB_TOKEN: ${{secrets.CI_GITHUB_TOKEN}}
          GORELEASER_CURRENT_TAG: ${{ env.tag_name }}
        run: |
          gh release upload ${GORELEASER_CURRENT_TAG} $PWD/install.sh -R guardllamanet/guardllama --clobber
  docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Generate build meta
        run: |
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "build_date=$(date '+%Y-%m-%d')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/guardllamanet/glmmgr
            ghcr.io/guardllamanet/glmmgr-wg

      # build flutter assets
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Run Flutter build
        run: |
          make internal/web/ui/dist/flutter.js

      - name: Docker push
        uses: docker/bake-action@v2
        with:
          push: true
          pull: true
          targets: all
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          set: |
            mgr.tags=ghcr.io/guardllamanet/glmmgr:latest
            wg.tags=ghcr.io/guardllamanet/glmmgr-wg:latest
            mgr.tags=ghcr.io/guardllamanet/glmmgr:${{ env.tag_name }}
            wg.tags=ghcr.io/guardllamanet/glmmgr-wg:${{ env.tag_name }}
            *.args.BUILD_VERSION=${{ env.tag_name }}
            *.args.BUILD_DATE=${{ env.build_date }}
            *.platform=linux/arm64,linux/amd64
  acceptance_test:
    name: Acceptance Test
    needs: [goreleaser, docker]
    runs-on: ubuntu-latest
    steps:
      - name: Install GuardLlama
        run: |
          curl -sfL https://get.guardllama.net | sh -
