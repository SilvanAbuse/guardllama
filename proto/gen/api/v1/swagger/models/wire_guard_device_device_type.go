// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// WireGuardDeviceDeviceType - UNKNOWN: buf:lint:ignore ENUM_VALUE_PREFIX
// buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
//   - LINUX: buf:lint:ignore ENUM_VALUE_PREFIX
//   - OPEN_BSD: buf:lint:ignore ENUM_VALUE_PREFIX
//   - FREE_BSD: buf:lint:ignore ENUM_VALUE_PREFIX
//   - WINDOWS: buf:lint:ignore ENUM_VALUE_PREFIX
//   - USERSPACE: buf:lint:ignore ENUM_VALUE_PREFIX
//
// swagger:model WireGuardDeviceDeviceType
type WireGuardDeviceDeviceType string

func NewWireGuardDeviceDeviceType(value WireGuardDeviceDeviceType) *WireGuardDeviceDeviceType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated WireGuardDeviceDeviceType.
func (m WireGuardDeviceDeviceType) Pointer() *WireGuardDeviceDeviceType {
	return &m
}

const (

	// WireGuardDeviceDeviceTypeUNKNOWN captures enum value "UNKNOWN"
	WireGuardDeviceDeviceTypeUNKNOWN WireGuardDeviceDeviceType = "UNKNOWN"

	// WireGuardDeviceDeviceTypeLINUX captures enum value "LINUX"
	WireGuardDeviceDeviceTypeLINUX WireGuardDeviceDeviceType = "LINUX"

	// WireGuardDeviceDeviceTypeOPENBSD captures enum value "OPEN_BSD"
	WireGuardDeviceDeviceTypeOPENBSD WireGuardDeviceDeviceType = "OPEN_BSD"

	// WireGuardDeviceDeviceTypeFREEBSD captures enum value "FREE_BSD"
	WireGuardDeviceDeviceTypeFREEBSD WireGuardDeviceDeviceType = "FREE_BSD"

	// WireGuardDeviceDeviceTypeWINDOWS captures enum value "WINDOWS"
	WireGuardDeviceDeviceTypeWINDOWS WireGuardDeviceDeviceType = "WINDOWS"

	// WireGuardDeviceDeviceTypeUSERSPACE captures enum value "USERSPACE"
	WireGuardDeviceDeviceTypeUSERSPACE WireGuardDeviceDeviceType = "USERSPACE"
)

// for schema
var wireGuardDeviceDeviceTypeEnum []interface{}

func init() {
	var res []WireGuardDeviceDeviceType
	if err := json.Unmarshal([]byte(`["UNKNOWN","LINUX","OPEN_BSD","FREE_BSD","WINDOWS","USERSPACE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		wireGuardDeviceDeviceTypeEnum = append(wireGuardDeviceDeviceTypeEnum, v)
	}
}

func (m WireGuardDeviceDeviceType) validateWireGuardDeviceDeviceTypeEnum(path, location string, value WireGuardDeviceDeviceType) error {
	if err := validate.EnumCase(path, location, value, wireGuardDeviceDeviceTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this wire guard device device type
func (m WireGuardDeviceDeviceType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWireGuardDeviceDeviceTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this wire guard device device type based on context it is used
func (m WireGuardDeviceDeviceType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
