// Code generated by go-swagger; DO NOT EDIT.

package server_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/guardllamanet/guardllama/proto/gen/api/v1/swagger/models"
)

// ServerServiceGetServerConfigReader is a Reader for the ServerServiceGetServerConfig structure.
type ServerServiceGetServerConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServerServiceGetServerConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServerServiceGetServerConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewServerServiceGetServerConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewServerServiceGetServerConfigOK creates a ServerServiceGetServerConfigOK with default headers values
func NewServerServiceGetServerConfigOK() *ServerServiceGetServerConfigOK {
	return &ServerServiceGetServerConfigOK{}
}

/*
ServerServiceGetServerConfigOK describes a response with status code 200, with default header values.

A successful response.
*/
type ServerServiceGetServerConfigOK struct {
	Payload *models.V1GetServerConfigResponse
}

// IsSuccess returns true when this server service get server config o k response has a 2xx status code
func (o *ServerServiceGetServerConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this server service get server config o k response has a 3xx status code
func (o *ServerServiceGetServerConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this server service get server config o k response has a 4xx status code
func (o *ServerServiceGetServerConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this server service get server config o k response has a 5xx status code
func (o *ServerServiceGetServerConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this server service get server config o k response a status code equal to that given
func (o *ServerServiceGetServerConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the server service get server config o k response
func (o *ServerServiceGetServerConfigOK) Code() int {
	return 200
}

func (o *ServerServiceGetServerConfigOK) Error() string {
	return fmt.Sprintf("[GET /server/config][%d] serverServiceGetServerConfigOK  %+v", 200, o.Payload)
}

func (o *ServerServiceGetServerConfigOK) String() string {
	return fmt.Sprintf("[GET /server/config][%d] serverServiceGetServerConfigOK  %+v", 200, o.Payload)
}

func (o *ServerServiceGetServerConfigOK) GetPayload() *models.V1GetServerConfigResponse {
	return o.Payload
}

func (o *ServerServiceGetServerConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1GetServerConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServerServiceGetServerConfigDefault creates a ServerServiceGetServerConfigDefault with default headers values
func NewServerServiceGetServerConfigDefault(code int) *ServerServiceGetServerConfigDefault {
	return &ServerServiceGetServerConfigDefault{
		_statusCode: code,
	}
}

/*
ServerServiceGetServerConfigDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ServerServiceGetServerConfigDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this server service get server config default response has a 2xx status code
func (o *ServerServiceGetServerConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this server service get server config default response has a 3xx status code
func (o *ServerServiceGetServerConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this server service get server config default response has a 4xx status code
func (o *ServerServiceGetServerConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this server service get server config default response has a 5xx status code
func (o *ServerServiceGetServerConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this server service get server config default response a status code equal to that given
func (o *ServerServiceGetServerConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the server service get server config default response
func (o *ServerServiceGetServerConfigDefault) Code() int {
	return o._statusCode
}

func (o *ServerServiceGetServerConfigDefault) Error() string {
	return fmt.Sprintf("[GET /server/config][%d] ServerService_GetServerConfig default  %+v", o._statusCode, o.Payload)
}

func (o *ServerServiceGetServerConfigDefault) String() string {
	return fmt.Sprintf("[GET /server/config][%d] ServerService_GetServerConfig default  %+v", o._statusCode, o.Payload)
}

func (o *ServerServiceGetServerConfigDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ServerServiceGetServerConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
